{"ast":null,"code":"var _jsxFileName = \"/Users/stanislav/Desktop/ClickSchool Classwork/react4/src/components/ThemeCheckbox.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeCheckbox = () => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n\n  const onChange = event => {\n    setChecked(event.target.checked);\n\n    if (event.target.checked) {\n      document.querySelector(':root').style.setProperty('--background', '#000');\n      document.querySelector(':root').style.setProperty('--text-color', '#FFF');\n    } else {\n      document.querySelector(':root').style.setProperty('--background', '#FFF');\n      document.querySelector(':root').style.setProperty('--text-color', '#000');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: checked,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), \": Enable dark mode\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), \"Hey \", name, \", theme is: \", checked ? 'dark' : 'light']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ThemeCheckbox, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n\n_c = ThemeCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeCheckbox\");","map":{"version":3,"names":["useState","ThemeCheckbox","checked","setChecked","onChange","event","target","document","querySelector","style","setProperty","name"],"sources":["/Users/stanislav/Desktop/ClickSchool Classwork/react4/src/components/ThemeCheckbox.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nexport const ThemeCheckbox = () => {\n    const [checked, setChecked] = useState(false);\n\n    const onChange = (event) => {\n        setChecked(event.target.checked)\n        if(event.target.checked) {\n            document.querySelector(':root').style.setProperty('--background', '#000');\n            document.querySelector(':root').style.setProperty('--text-color', '#FFF');\n        } else {\n            document.querySelector(':root').style.setProperty('--background', '#FFF');\n            document.querySelector(':root').style.setProperty('--text-color', '#000');\n        }\n    }\n\n    return  (\n            <div>\n                <input type='checkbox' checked = {checked} onChange = {onChange} />: Enable dark mode\n                <br />\n                Hey {name}, theme is: {checked ? 'dark' : 'light'}\n            </div>\n    )\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMI,QAAQ,GAAIC,KAAD,IAAW;IACxBF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaJ,OAAd,CAAV;;IACA,IAAGG,KAAK,CAACC,MAAN,CAAaJ,OAAhB,EAAyB;MACrBK,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsCC,WAAtC,CAAkD,cAAlD,EAAkE,MAAlE;MACAH,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsCC,WAAtC,CAAkD,cAAlD,EAAkE,MAAlE;IACH,CAHD,MAGO;MACHH,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsCC,WAAtC,CAAkD,cAAlD,EAAkE,MAAlE;MACAH,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsCC,WAAtC,CAAkD,cAAlD,EAAkE,MAAlE;IACH;EACJ,CATD;;EAWA,oBACQ;IAAA,wBACI;MAAO,IAAI,EAAC,UAAZ;MAAuB,OAAO,EAAIR,OAAlC;MAA2C,QAAQ,EAAIE;IAAvD;MAAA;MAAA;MAAA;IAAA,QADJ,qCAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,UAGSO,IAHT,kBAG2BT,OAAO,GAAG,MAAH,GAAY,OAH9C;EAAA;IAAA;IAAA;IAAA;EAAA,QADR;AAOH,CArBM;;GAAMD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}